import{_ as o,c,a as t,b as s,d as a,e,o as l,r as i}from"./app-5u2AVv_J.js";const u={},r={href:"https://imgse.com/i/pArLwhF",target:"_blank",rel:"noopener noreferrer"},k={href:"https://imgse.com/i/pArOlE6",target:"_blank",rel:"noopener noreferrer"};function d(m,n){const p=i("ExternalLinkIcon");return l(),c("div",null,[n[6]||(n[6]=t(`<h2 id="屏幕坐标-转-笛卡尔坐标" tabindex="-1"><a class="header-anchor" href="#屏幕坐标-转-笛卡尔坐标"><span>屏幕坐标 转 笛卡尔坐标</span></a></h2><p>X Y 表示对应的屏幕X Y 轴的坐标 ellipsoid 表示地球模型，是通过viewer拿到的。<code>viewer.scene.globe.ellipsoid</code></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">    <span class="token keyword">let</span> screenPoint <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>Cartesian2</span><span class="token punctuation">(</span><span class="token constant">X</span><span class="token punctuation">,</span> <span class="token constant">Y</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// 这个坐标与地球相交点的笛卡尔坐标并返回一个交点的笛卡尔坐标</span></span>
<span class="line">    <span class="token keyword">let</span> cartesian3 <span class="token operator">=</span> scene<span class="token punctuation">.</span>camera<span class="token punctuation">.</span><span class="token function">pickEllipsoid</span><span class="token punctuation">(</span>screenPoint<span class="token punctuation">,</span>ellipsoid<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="笛卡尔坐标-转-地理坐标" tabindex="-1"><a class="header-anchor" href="#笛卡尔坐标-转-地理坐标"><span>笛卡尔坐标 转 地理坐标</span></a></h2><p><code>Cesium.Cartographic.fromCartesian()</code>函数是将笛卡尔坐标转换成地理坐标</p><p><code>Cesium.Math.toDegrees</code> 函数主要用于将弧度值转换为角度值</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">    <span class="token keyword">let</span> cartographic <span class="token operator">=</span> Cesium<span class="token punctuation">.</span>Cartographic<span class="token punctuation">.</span><span class="token function">fromCartesian</span><span class="token punctuation">(</span>cartesian3<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">let</span> longitude <span class="token operator">=</span> Cesium<span class="token punctuation">.</span>Math<span class="token punctuation">.</span><span class="token function">toDegrees</span><span class="token punctuation">(</span>cartographic<span class="token punctuation">.</span>longitude<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">let</span> latitude <span class="token operator">=</span> Cesium<span class="token punctuation">.</span>Math<span class="token punctuation">.</span><span class="token function">toDegrees</span><span class="token punctuation">(</span>cartographic<span class="token punctuation">.</span>latitude<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">let</span> height <span class="token operator">=</span> cartographic<span class="token punctuation">.</span>height<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="应用" tabindex="-1"><a class="header-anchor" href="#应用"><span>应用</span></a></h2><blockquote><p>场景：有一个div盒子定位到页面上；根据他的位置在球上标会出他四个角的点位；例如下图</p></blockquote><p>[<img src="https://s21.ax1x.com/2024/11/04/pArLKk8.md.png" alt="pArLKk8.md.png">]</p><h3 id="思路" tabindex="-1"><a class="header-anchor" href="#思路"><span>思路</span></a></h3><p>我们首先先获取这个div的<code>屏幕坐标</code>然后通过屏幕坐标再转换为<code>笛卡尔</code>，然后再转<code>地理坐标</code>并给四个点打上点；</p>`,12)),s("ul",null,[s("li",null,[s("p",null,[n[1]||(n[1]=a("通过 ")),n[2]||(n[2]=s("code",null,"DOM.getBoundingClientRect()",-1)),n[3]||(n[3]=a("函数可以拿到他的屏幕坐标信息； ")),s("a",r,[n[0]||(n[0]=s("img",{src:"https://s21.ax1x.com/2024/11/04/pArLwhF.png",alt:"pArLwhF.png"},null,-1)),e(p)])])]),n[4]||(n[4]=s("li",null,[s("p",null,[a("然后再根据前面"),s("a",{href:"#%E5%B1%8F%E5%B9%95%E5%9D%90%E6%A0%87-%E8%BD%AC-%E7%AC%9B%E5%8D%A1%E5%B0%94%E5%9D%90%E6%A0%87"},"👆"),a("提到的坐标转换代码最终转换成cesium可地理坐标然后再根据四个点的坐标打点即可；")])],-1))]),n[7]||(n[7]=t(`<h3 id="代码部分" tabindex="-1"><a class="header-anchor" href="#代码部分"><span>代码部分</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token comment">// 坐标转换</span></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">coordTransition</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token parameter">viewer</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> boxRect <span class="token operator">=</span> box<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取div的坐标信息</span></span>
<span class="line">    <span class="token keyword">const</span> scene <span class="token operator">=</span> viewer<span class="token punctuation">.</span>scene<span class="token punctuation">;</span><span class="token comment">//场景</span></span>
<span class="line">    <span class="token keyword">const</span> camera<span class="token operator">=</span>viewer<span class="token punctuation">.</span>camera<span class="token punctuation">;</span><span class="token comment">//相机</span></span>
<span class="line">    <span class="token keyword">const</span> ellipsoid <span class="token operator">=</span> viewer<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>globe<span class="token punctuation">.</span>ellipsoid<span class="token punctuation">;</span><span class="token comment">// 代表地球的椭球体模型</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">const</span> corners <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">        <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> boxRect<span class="token punctuation">.</span>left<span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> boxRect<span class="token punctuation">.</span>top <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// 左上角</span></span>
<span class="line">        <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> boxRect<span class="token punctuation">.</span>right<span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> boxRect<span class="token punctuation">.</span>top <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// 右上角</span></span>
<span class="line">        <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> boxRect<span class="token punctuation">.</span>left<span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> boxRect<span class="token punctuation">.</span>bottom <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// 左下角</span></span>
<span class="line">        <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> boxRect<span class="token punctuation">.</span>right<span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> boxRect<span class="token punctuation">.</span>bottom <span class="token punctuation">}</span> <span class="token comment">// 右下角</span></span>
<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">let</span> geographicCoords <span class="token operator">=</span> <span class="token function">convertToGeographic</span><span class="token punctuation">(</span>corners<span class="token punctuation">,</span> scene<span class="token punctuation">,</span> camera<span class="token punctuation">,</span>ellipsoid<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 遍历数组并打点</span></span>
<span class="line">    geographicCoords<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">const</span> latitude <span class="token operator">=</span> item<span class="token punctuation">.</span>longitude<span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">const</span> longitude <span class="token operator">=</span> item<span class="token punctuation">.</span>latitude<span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">const</span> height <span class="token operator">=</span> item<span class="token punctuation">.</span>height<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        viewer<span class="token punctuation">.</span>entities<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// fromDegrees（经度，纬度，高度，椭球，结果）从以度为单位的经度和纬度值返回Cartesian3位置</span></span>
<span class="line">            <span class="token literal-property property">position</span><span class="token operator">:</span> Cesium<span class="token punctuation">.</span>Cartesian3<span class="token punctuation">.</span><span class="token function">fromDegrees</span><span class="token punctuation">(</span>latitude<span class="token punctuation">,</span> longitude<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token literal-property property">point</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token comment">// 点的大小（像素）</span></span>
<span class="line">                <span class="token literal-property property">pixelSize</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token comment">// 点位颜色，fromCssColorString 可以直接使用CSS颜色</span></span>
<span class="line">                <span class="token literal-property property">color</span><span class="token operator">:</span> Cesium<span class="token punctuation">.</span>Color<span class="token punctuation">.</span><span class="token function">fromCssColorString</span><span class="token punctuation">(</span><span class="token string">&#39;#ee0000&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token comment">// 边框颜色</span></span>
<span class="line">                <span class="token literal-property property">outlineColor</span><span class="token operator">:</span> Cesium<span class="token punctuation">.</span>Color<span class="token punctuation">.</span><span class="token function">fromCssColorString</span><span class="token punctuation">(</span><span class="token string">&#39;#fff&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token comment">// 边框宽度(像素)</span></span>
<span class="line">                <span class="token literal-property property">outlineWidth</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token comment">// 显示在距相机的距离处的属性，多少区间内是可以显示的</span></span>
<span class="line">                <span class="token literal-property property">distanceDisplayCondition</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>DistanceDisplayCondition</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">150000000</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token comment">// 是否显示</span></span>
<span class="line">                <span class="token literal-property property">show</span><span class="token operator">:</span> <span class="token boolean">true</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 将屏幕坐标&gt;笛卡尔 笛卡尔&gt;地理坐标</span></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">convertToGeographic</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token parameter">screenPointsArray<span class="token punctuation">,</span> scene<span class="token punctuation">,</span> camera<span class="token punctuation">,</span>ellipsoid</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">let</span> geographicPoints <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    screenPointsArray<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 将屏幕坐标转换为二维笛卡尔坐标 然后在根据这个坐标与地球(ellipsoid)相交点的笛卡尔坐标并返回一个交点的笛卡尔坐标（Cesium.Cartesian3）</span></span>
<span class="line">        <span class="token keyword">let</span> screenPoint <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>Cartesian2</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>x<span class="token punctuation">,</span> item<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">let</span> cartesian3 <span class="token operator">=</span> scene<span class="token punctuation">.</span>camera<span class="token punctuation">.</span><span class="token function">pickEllipsoid</span><span class="token punctuation">(</span>screenPoint<span class="token punctuation">,</span>ellipsoid<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>cartesian3<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// 将笛卡尔坐标转换为地理坐标</span></span>
<span class="line">            <span class="token keyword">let</span> cartographic <span class="token operator">=</span> Cesium<span class="token punctuation">.</span>Cartographic<span class="token punctuation">.</span><span class="token function">fromCartesian</span><span class="token punctuation">(</span>cartesian3<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">let</span> longitude <span class="token operator">=</span> Cesium<span class="token punctuation">.</span>Math<span class="token punctuation">.</span><span class="token function">toDegrees</span><span class="token punctuation">(</span>cartographic<span class="token punctuation">.</span>longitude<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">let</span> latitude <span class="token operator">=</span> Cesium<span class="token punctuation">.</span>Math<span class="token punctuation">.</span><span class="token function">toDegrees</span><span class="token punctuation">(</span>cartographic<span class="token punctuation">.</span>latitude<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">let</span> height <span class="token operator">=</span> cartographic<span class="token punctuation">.</span>height<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">            geographicPoints<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">                <span class="token literal-property property">longitude</span><span class="token operator">:</span> longitude<span class="token punctuation">,</span></span>
<span class="line">                <span class="token literal-property property">latitude</span><span class="token operator">:</span> latitude<span class="token punctuation">,</span></span>
<span class="line">                <span class="token literal-property property">height</span><span class="token operator">:</span> height</span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">return</span> geographicPoints<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="效果" tabindex="-1"><a class="header-anchor" href="#效果"><span>效果</span></a></h3>`,3)),s("p",null,[s("a",k,[n[5]||(n[5]=s("img",{src:"https://s21.ax1x.com/2024/11/04/pArOlE6.png",alt:"pArOlE6.png"},null,-1)),e(p)])])])}const b=o(u,[["render",d],["__file","zuobiaozhuanhuan.html.vue"]]),g=JSON.parse('{"path":"/blogs/cesium/zuobiaozhuanhuan.html","title":"坐标转换","lang":"en-US","frontmatter":{"title":"坐标转换","date":"2024-11-4","tags":["cesium三维地图","代码实现"],"categories":["cesium"]},"headers":[{"level":2,"title":"屏幕坐标 转 笛卡尔坐标","slug":"屏幕坐标-转-笛卡尔坐标","link":"#屏幕坐标-转-笛卡尔坐标","children":[]},{"level":2,"title":"笛卡尔坐标 转 地理坐标","slug":"笛卡尔坐标-转-地理坐标","link":"#笛卡尔坐标-转-地理坐标","children":[]},{"level":2,"title":"应用","slug":"应用","link":"#应用","children":[{"level":3,"title":"思路","slug":"思路","link":"#思路","children":[]},{"level":3,"title":"代码部分","slug":"代码部分","link":"#代码部分","children":[]},{"level":3,"title":"效果","slug":"效果","link":"#效果","children":[]}]}],"git":{"createdTime":1730708833000,"updatedTime":1730708833000,"contributors":[{"name":"刘政杨","email":"314781333@qq.com","commits":1}]},"filePathRelative":"blogs/cesium/坐标转换.md"}');export{b as comp,g as data};
